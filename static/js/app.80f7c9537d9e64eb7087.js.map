{"version":3,"sources":["webpack:///src/components/header.vue","webpack:///./src/components/header.vue?7db5","webpack:///./src/components/header.vue","webpack:///./src/components/footer.vue?498c","webpack:///./src/components/footer.vue","webpack:///src/App.vue","webpack:///./src/App.vue?af62","webpack:///./src/App.vue","webpack:///./src/api/auth.js","webpack:///./src/store/modules/auth.js","webpack:///./src/store/index.js","webpack:///./src/router/index.js","webpack:///./src/helpers/util.js","webpack:///./src/main.js","webpack:///./src/api/blog.js","webpack:///./src/helpers/request.js"],"names":["header","data","created","this","checkLogin","computed","extends_default","Object","vuex_esm","methods","onLogout","logout","components_header","render","_vm","_h","$createElement","_c","_self","class","login","isLogin","no-login","_e","_v","staticClass","attrs","to","src","user","avatar","alt","title","username","href","on","click","staticRenderFns","footer","_m","App","components","Header","__webpack_require__","normalizeComponent","ssrContext","Footer","footer_normalizeComponent","selectortype_template_index_0_src_App","id","src_App","App_normalizeComponent","URL","auth","register","_ref","password","request","_ref2","localStorage","removeItem","getInfo","modules_auth","state","getters","mutations","setUser","payload","setLogin","actions","commit","then","res","_ref3","_ref4","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","abrupt","stop","_ref5","_this2","_callee2","_context2","_ref6","catch","error","Vue","use","Vuex","store","Store","modules","blog","window","Router","router","routes","path","component","e","bind","meta","requiresAuth","beforeEach","from","matched","some","record","dispatch","query","redirect","fullPath","friendlyDate","datsStr","time","typeof_default","Date","getTime","space","now","str","Math","floor","util","install","options","prototype","ElementUI","Util","config","productionTip","el","template","__WEBPACK_IMPORTED_MODULE_0__helpers_request__","GET_LIST","GET_DETAIL","CREATE","UPDATE","DELETE","__webpack_exports__","getBlogs","arguments","length","undefined","page","_ref$page","userId","atIndex","getIndexBlogs","_ref2$page","getBlogsByUserId","_ref3$page","getDetail","blogId","replace","updateBlog","content","description","deleteBlog","_ref7","createBlog","_ref8","_ref8$title","_ref8$content","_ref8$description","_ref8$atIndex","url","type","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","resolve","reject","option","method","toLowerCase","params","token","axios","defaults","headers","common","console","log","status","Message","msg","err","baseURL","post"],"mappings":"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","file":"static/js/app.80f7c9537d9e64eb7087.js","sourcesContent":["//头部组件\r\n<template>\r\n  <!-- class适配 用户登录显示login样式 / 用户未登录显示no-login样式-->\r\n  <header :class=\"{'login':isLogin,'no-login':!isLogin}\">\r\n     <!-- 登录样式 -->\r\n    <template v-if='!isLogin'>\r\n      <h1>Let's share</h1>\r\n      <p>精品博客汇聚</p>\r\n      <div class=\"btns\">\r\n        <router-link to=\"/login\"><el-button >立即登录</el-button></router-link>\r\n        <router-link to=\"/register\"><el-button>注册账号</el-button></router-link>\r\n      </div> \r\n    </template>\r\n    <!-- 未登录样式 -->\r\n    <template v-if='isLogin'>\r\n      <h1><router-link to=\"/\">Let's share</router-link></h1>\r\n      <router-link to=\"/create\"><i class=\"edit el-icon-plus\"></i></router-link> \r\n      <div class=\"user\">\r\n        <img class=\"avatar\" :src=\"user.avatar\" alt=\"user.username\"  :title=\"user.username\" >\r\n        <ul>\r\n          <li><router-link to=\"/my\">我的</router-link></li>\r\n          <li><a href=\"#\" @click=\"onLogout\">注销</a></li>\r\n        </ul>\r\n      </div>         \r\n    </template>\r\n    \r\n  </header>\r\n</template>\r\n\r\n//配置\r\n<script>\r\n//vuex 在在项目中管理登录状态\r\n\r\n//引入映射 {mapGetters,mapActions} \r\nimport {mapGetters,mapActions} from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // isLogin:false //获取用户登录状态（切换头部样式）\r\n    }\r\n  },\r\n\r\n  created(){ //生命周期:在页面没有渲染之前检查用户是否登录\r\n    this.checkLogin() //调用checkLogin() ，返回一个promise对象\r\n      //待优化闪回Bug\r\n  },\r\n  /*\r\n  在页面还未渲染的时候检查 state 中用户登录状态，用户已登录，则返回 isLogin = true ，获取用户信息，渲染到页面上；用户未登录，则返回 isLogin = false。\r\n  */\r\n\r\n  computed:{ // 把 store 中 getter 属性映射到此组件\r\n    ...mapGetters([ //设置Vuex中getters方法 转换为 自身方法\r\n      'isLogin',\r\n      'user'  \r\n    ])\r\n  },\r\n\r\n  methods:{\r\n    // 把Vuex auth.js 中的方法映射到此组\r\n    ...mapActions([ //设置Vuex中actions方法 转换为 自身方法\r\n      'checkLogin',  // 检测用户是否登录\r\n      'logout'     // 注销\r\n    ]),\r\n    \r\n    onLogout(){\r\n      this.logout() //调用logout() ，返回一个promise对象\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n//样式\r\n<style lang=\"less\">\r\n\r\n@import \"../assets/base.less\";  \r\n\r\nheader.no-login {\r\n  padding: 0 12% 30px 12%;\r\n  background: @bgColor;\r\n  display: grid;\r\n  justify-items: center;\r\n\r\n  h1 {\r\n    color: #fff;\r\n    font-size: 40px;\r\n    margin: 60px 0 0 0;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  p {\r\n    margin: 15px 0 0 0;\r\n    color: #fff;\r\n  }\r\n  \r\n  .btns {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  button {\r\n    margin: 20px 5px 0;\r\n  }\r\n} \r\n\r\n\r\nheader.login {\r\n  display: flex;\r\n  align-items: center;\r\n  background: @bgColor;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    padding: 0;\r\n    color: #fff;\r\n    font-size: 40px;\r\n    text-transform: uppercase;\r\n    flex: 1;\r\n    \r\n    a{\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  .edit {\r\n    color: #fff;\r\n    font-size: 30px;\r\n  }\r\n\r\n  .avatar {\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 1px solid #fff;\r\n    border-radius: 50%;\r\n    margin-left: 15px;\r\n  }\r\n\r\n  .user {\r\n    position: relative;\r\n\r\n    ul {\r\n      display: none;\r\n      position: absolute;\r\n      right: 0;\r\n      list-style: none;\r\n      border: 1px solid #eaeaea;\r\n      margin:0;\r\n      padding: 0;\r\n      background-color: #fff;\r\n\r\n      a {\r\n        text-decoration: none;\r\n        color: #333;\r\n        font-size: 12px;\r\n        display: block;\r\n        padding: 5px 10px;\r\n\r\n        &:hover {\r\n          background-color: #eaeaea;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    &:hover ul {\r\n      display: block;\r\n    }\r\n  }\r\n}\r\n\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/header.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{class:{'login':_vm.isLogin,'no-login':!_vm.isLogin}},[(!_vm.isLogin)?[_c('h1',[_vm._v(\"Let's share\")]),_vm._v(\" \"),_c('p',[_vm._v(\"精品博客汇聚\")]),_vm._v(\" \"),_c('div',{staticClass:\"btns\"},[_c('router-link',{attrs:{\"to\":\"/login\"}},[_c('el-button',[_vm._v(\"立即登录\")])],1),_vm._v(\" \"),_c('router-link',{attrs:{\"to\":\"/register\"}},[_c('el-button',[_vm._v(\"注册账号\")])],1)],1)]:_vm._e(),_vm._v(\" \"),(_vm.isLogin)?[_c('h1',[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"Let's share\")])],1),_vm._v(\" \"),_c('router-link',{attrs:{\"to\":\"/create\"}},[_c('i',{staticClass:\"edit el-icon-plus\"})]),_vm._v(\" \"),_c('div',{staticClass:\"user\"},[_c('img',{staticClass:\"avatar\",attrs:{\"src\":_vm.user.avatar,\"alt\":\"user.username\",\"title\":_vm.user.username}}),_vm._v(\" \"),_c('ul',[_c('li',[_c('router-link',{attrs:{\"to\":\"/my\"}},[_vm._v(\"我的\")])],1),_vm._v(\" \"),_c('li',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":_vm.onLogout}},[_vm._v(\"注销\")])])])])]:_vm._e()],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-61424a4c\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/header.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-61424a4c\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./header.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./header.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./header.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-61424a4c\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./header.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/header.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('footer',[_c('p',[_vm._v(\"© xinjianan.com 2020 wechat: X_Jianan\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-be87fd2c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/footer.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-be87fd2c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./footer.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-be87fd2c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./footer.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-be87fd2c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/footer.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <!-- 头部组件 -->\n    <Header id=\"header\"></Header>\n    <!-- 内容 -->\n    <main id=\"main\">\n      <!-- 路由内容跳转 -->\n      <router-view/>   \n    </main>\n    <!-- 底部组件 -->\n    <Footer id=\"footer\"></Footer>\n  </div>\n</template>\n\n<script>\n//引入header组件/Footer组件\nimport Header from './components/header'\nimport Footer from './components/footer'\n\nexport default {\n  components:{\n    Header,\n    Footer\n  }\n  \n}\n</script>\n\n<style lang='less'>\n//引入通用样式\n@import \"./assets/common.less\";\n\nhtml,body,#app{//撑开高度\n  height: 100%;\n  \n}\nbody{\n  background-color:#f6f6f6 ;\n}\n#app {\n  display: grid; //grid 通过在页面上划分 columns 和 rows\n  grid-template-columns:12% auto 12%; // 分成三列，左右列宽度分别是页面的12%，中间内容宽度自适应\n  grid-template-rows:auto 1fr auto; // 分成三行，上下行高度自适应，中间内容占满剩余宽度\n  grid-template-areas: \"header header header\" // 划分区域\n                       \".      main   .\"\n                       \"footer footer footer\";\n}\n#header{\n  // border:1px solid red;\n  grid-area:header;\n  padding-left:12%;\n  padding-right:12%;\n  \n  box-shadow: 0 1px 3px rgba(18,18,18,.2);\n\n}\n#main{\n  // border:1px solid black;\n  grid-area:main;\n  \n}\n#footer{\n  // border:1px solid green;\n  grid-area:footer;\n  padding-left:12%;\n  padding-right:12%;\n}\n\n//响应式\n@media (max-width:768px){\n  #app{\n    grid-template-columns: 10px auto 10px;\n    #header,#footer{\n      padding-left: 10px;\n      padding-right: 10px;\n    }\n  }\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Header',{attrs:{\"id\":\"header\"}}),_vm._v(\" \"),_c('main',{attrs:{\"id\":\"main\"}},[_c('router-view')],1),_vm._v(\" \"),_c('Footer',{attrs:{\"id\":\"footer\"}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-43821c6a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-43821c6a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-43821c6a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","//在封装request基础上，把获取数据的 API 进行封装，使其更易用\r\nimport request from '@/helpers/request'\r\n\r\n//后端约定接口 \r\nconst URL = {\r\n  REGISTER: '/auth/register',\r\n  LOGIN: '/auth/login',\r\n  LOGOUT: '/auth/logout',\r\n  GET_INFO: '/auth'\r\n}\r\n\r\n//导出\r\nexport default {\r\n  //注册\r\n  register({username, password}) {\r\n    return request(URL.REGISTER, 'POST', { username, password })\r\n  },\r\n  //登录\r\n  login({username, password}) {\r\n    return request(URL.LOGIN, 'POST', { username, password })\r\n  },\r\n  //注销\r\n  logout() {\r\n    localStorage.removeItem('token')//删除localStorage本地下token\r\n    return request(URL.LOGOUT)\r\n  },\r\n  // 查看用户\r\n  getInfo() {\r\n    return request(URL.GET_INFO)\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/api/auth.js","// 负责用户注册、登录状态 (用户登录注册相关数据)\r\n\r\nconst state = { // 全局数据\r\n  user: null, // 先定义一个默认的用户状态\r\n  isLogin: false //登录状态\r\n}\r\n\r\nconst getters = { // 获取 state 数据 （等同 Vue计算属性和侦听属性computed）\r\n   user:state => state.user, //侦听\r\n   isLogin:state => state.isLogin //侦听\r\n}\r\n\r\nconst mutations = {  //提供修改方法(同步函数)\r\n\r\n    // 更新用户数据\r\n    setUser(state, payload) { \r\n        state.user = payload.user\r\n    },\r\n    /*\r\n    payload：有效载荷，即记录有效信息的部分通常在传输数据时，为了使数据传输更可靠，要把原始数据分批传输，使得原始数据不易丢失\r\n    */\r\n    \r\n    // 更新用户登录状态\r\n    setLogin(state,payload){ \r\n        state.isLogin = payload.isLogin\r\n    }\r\n\r\n}\r\n\r\n//引入Api\r\nimport auth from '@/api/auth.js'\r\n\r\nconst actions = { //异步函数  \r\n  // 用户登录  \r\n  login({commit},{username,password}) { //{commit} 是默认参数，相当于 context.commit(异步调用)，使用了 ES6 的参数结构\r\n      return auth.login({ username, password }) // 调用底层接口，返回的是一个 Promise 对象 （ auth.login ），使用 login() 后就可以用 then 来处理这个结果\r\n          .then(res => { \r\n              commit('setUser', { user: res.data }) // 把从 服务器 通过 axios 获取回来的用户数据提交 mutation，更新到 state： commit -> setUser -> state\r\n              commit('setLogin',{isLogin:true}) // 把从 服务器 通过 axios 获取回来的用户数据提交 mutation，更新到 state： commit -> setLogin -> state\r\n        })\r\n  },\r\n  /*\r\n    login({username, password}) {\r\n      return request(URL.LOGIN, 'POST', { username, password })\r\n  },\r\n  */\r\n    \r\n  //注册 第二种写法（async/await）\r\n  async register({commit},{username,password}) {// 声明 register 为一个异步函数，他会返回一个 Promise 对象\r\n      let res = await auth.register({ username, password }) // 用户注册成功后后会返回的一个 Promise 对象，其中包含了用户的信息，let res 就是 await 异步 auth.register 获取的结果\r\n      commit('setUser', { user: res.data }) // 把从 服务器 通过 axios 获取回来的用户数据提交 mutation，更新到 state： commit -> setUser -> state\r\n      commit('setLogin',{isLogin:true}) // 把从 服务器 通过 axios 获取回来的用户数据提交 mutation，更新到 state： commit -> setLogin -> state\r\n      return res.data // 把 res.data 返回出去，使用 register() 后就可以用 then 来处理这个结果\r\n  },\r\n    /*\r\n    register({username, password}) {\r\n    return request(URL.REGISTER, 'POST', { username, password })\r\n    },\r\n     */\r\n    /*\r\n    async/await 是异步编程的一种解决方案 ，register操作的也是promise\r\n    1.async 声明一个函数为异步函数，这个函数返回的是一个 Promise 对象；\r\n    2.await 用于等待一个 async 函数的返回值(注意到 await 不仅仅用于等 Promise 对象，它可以等任意表达式的结果，所以，await 后面实际是可以接普通函数调用或者直接量的。)\r\n    */\r\n  \r\n  \r\n    //注销\r\n    async logout({ commit }) {\r\n            await auth.logout() // 用户注销后会返回的一个 Promise 对象\r\n            commit('setUser', { user: null }) // 把从 服务器 通过 axios 获取回来的用户数据提交 mutation，更新到 state： commit -> setUser -> state\r\n            commit('setLogin',{isLogin:false}) // 把从 服务器 通过 axios 获取回来的用户数据提交 mutation，更新到 state： commit -> setLogin -> state\r\n    },\r\n    /*\r\n      logout() {\r\n         localStorage.removeItem('token')//删除localStorage本地下token\r\n         return request(URL.LOGOUT)\r\n      },\r\n    */\r\n    \r\n\r\n    // 检测用户是否登录\r\n    /*\r\n    async checkLogin({ commit, state }) { \r\n      if (state.isLogin) return true // 先从本地store的state去看用户是否登录,如果登录了 就返回true \r\n      let res = await auth.getInfo() // 检测用户是否登录会返回的一个 Promise 对象，其中包含了用户的信息，let res 就是 await 异步 auth.getInfo 获取的结果\r\n      commit('setLogin', { isLogin: res.isLogin }) // 把从 服务器 通过 axios 获取回来的用户数据提交 mutation，更新到 state： commit -> setLogin -> state\r\n      \r\n      if (!state.isLogin) return false// 如果本地没有这个状态，就发ajax请求去服务器，服务器会返回一个isLogin的响应，根据这个值来确定是否登录\r\n      commit('setUser', { user: res.data })  // 把从 服务器 通过 axios 获取回来的用户数据提交 mutation，更新到 state： commit -> setLogin -> state\r\n      \r\n      return true // 最后的 return true 是为了在实例中then拿到这个true，方便做下一步处理\r\n     },\r\n    */\r\n    checkLogin({commit,state}){\r\n        return auth.getInfo()\r\n        .then(res=>{\r\n            //请求成功后isLogin就等于你res.isLogin\r\n            commit('setLogin',{isLogin:res.isLogin})\r\n            //如果是true说明登录了，就需要设置用户信息，也就是触发setUser\r\n            if(state.isLogin){\r\n                commit('setUser',{user:res.data})\r\n                //这里之所以还要return是因为我们是返回的一个promise.then()也就是下一次对它.then()的时候也就是对promise.then()的返回值进行处理，所以在.then()里要return要不然就是undefined\r\n                return true\r\n            }else{\r\n                return false\r\n          }\r\n        }).catch(error => {// 重要：捕捉错误并执行代码！/(ㄒoㄒ)/~~\r\n          return false\r\n        })\r\n    }\r\n    /*\r\n      getInfo() {\r\n         return request(URL.GET_INFO)\r\n      }\r\n    */\r\n    /*第三方调用\r\n      this.checkLogin() //调用checkLogin() ，返回一个promise对象\r\n        .then(isLogin=>{ //isLogin 即为 return true/false\r\n        代码...\r\n       })\r\n    */\r\n    \r\n\r\n} \r\n  \r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/auth.js","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport auth from './modules/auth' //用户登录注册相关数据\r\nimport blog from './modules/blog' //blog博客相关数据\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({ //创建Store对象，提供全局使用数据\r\n  // 模块引入： auth 和 blog 对象\r\n  modules: {\r\n    auth,\r\n    blog\r\n  }\r\n})\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.js","//路由\nimport Vue from 'vue'\nimport Router from 'vue-router'\n//引入：pages中分类页面\n\n/* 取消直接引入\nimport Create from '@/pages/Create/template.vue';\nimport Detail from '@/pages/Detail/template.vue';\nimport Edit from '@/pages/Edit/template.vue';\nimport Index from '@/pages/Index/template.vue';\nimport Login from '@/pages/Login/template.vue';\nimport My from '@/pages/My/template.vue';\nimport Register from '@/pages/Register/template.vue';\nimport User from '@/pages/User/template.vue';\n*/\n\n//引入Vuex store\nimport store from '../store';\n// 测试\nwindow.store = store\n\nVue.use(Router)\n\n\n//导出：跳转页面（路径 和 组件）\n/*\nconst router = new Router({\n  routes: [\n    // {\n    //   path: '当前文件路径',\n    //   component: 组件名\n    // },\n    {\n      path: '/',\n      component: Index\n    },\n    {\n      path: '/create',\n      component: Create,\n      meta: { requiresAuth: true } //路由元：添加 meta 字段，先确认用户是否登录才能操作，否则将会自动跳转到登录页。\n       //这段路由匹配到的所有路由记录会暴露为 $route 对象 (还有在导航守卫中的路由对象) 的 $route.matched 数组\n      \n    },\n    {\n      path: '/detail/:blogId',//完善路由：指定博客ID 对应 博客详情\n      component: Detail\n    },\n    {\n      path: '/edit/:blogId',//完善路由：指定博客ID 对应 编辑\n      component: Edit,\n      meta: { requiresAuth: true } //路由元：添加 meta 字段，先确认用户是否登录才能操作，否则将会自动跳转到登录页。\n      //这段路由匹配到的所有路由记录会暴露为 $route 对象 (还有在导航守卫中的路由对象) 的 $route.matched 数组\n    },\n    {\n      path: '/login',\n      component: Login\n    },\n    {\n      path: '/my',\n      component: My,\n      meta: { requiresAuth: true } //路由元：添加 meta 字段，先确认用户是否登录才能操作，否则将会自动跳转到登录页。\n       //这段路由匹配到的所有路由记录会暴露为 $route 对象 (还有在导航守卫中的路由对象) 的 $route.matched 数组\n    },\n    {\n      path: '/register',\n      component: Register\n    },\n      {\n      path: '/user/:userId', //完善路由：指定用户ID 对应 编辑\n      component: User\n    }\n  ]\n})\n*/\n\n//懒加载：通过component 回调函数 异步加载文件\nconst router =  new Router({\n  routes: [\n    {\n      path: '/',\n      component: () => import('@/pages/Index/template(backPage).vue')\n    },\n    {\n      path: '/login',\n      component: () => import('@/pages/Login/template.vue')\n    },\n    {\n      path: '/detail/:blogId',\n      component: () => import('@/pages/Detail/template.vue')\n    },\n    {\n      path: '/edit/:blogId',\n      component: () => import('@/pages/Edit/template.vue'),\n      meta: { requiresAuth: true }\n    },\n    {\n      path: '/create',\n      component: () => import('@/pages/Create/template.vue'),\n      meta: { requiresAuth: true }\n    },\n    {\n      path: '/user/:userId',\n      component: () => import('@/pages/User/template.vue')\n    },\n    {\n      path: '/my',\n      component: () => import('@/pages/My/template.vue'),\n      meta: { requiresAuth: true }\n    },\n    {\n      path: '/register',\n      component: () => import('@/pages/Register/template.vue')\n    }\n  ]\n})\n\n//在全局导航守卫中检查元字段 \nrouter.beforeEach((to, from, next) => {//beforeEach:每次路由切换，都会(遍历)执行下面函数\n\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    //1.to.matched：对应的Path路由\n    //2.通过遍历 $route.matched 来检查路由记录record中的 meta requiresAuth 为 true 字段\n    \n    store.dispatch('checkLogin').then(isLogin => {\n    // 执行action （异步）：如果 store.dispatch('checkLogin') 返回的结果 isLogin 为 false，则说明用户没有登录，就会跳转到 登录页\n         \n        if (!isLogin) { //否\n          next({\n            path: '/login',\n            query: { redirect: to.fullPath } //添加字段\n          })\n        } else { //正\n          next()\n        }\n      })\n    } else {\n      next() // 确保一定要调用 next()\n    }\n})\n\n\n/*\nrouter.beforeEach((to, from, next) => {//beforeEach:每次路由切换，都会(遍历)执行下面函数\n\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n  //1.to.matched：对应的Path路由\n  //2.通过遍历 $route.matched 来检查路由记录record中的 meta requiresAuth 为 true 字段\n\n    if (!store.getters.isLogin) { \n      //1.返回false:用户没有登录，自动跳转到登录页\n      //2.store.getters.isLogin：通过(Vuex)store中getters侦听isLogin状态为false。（同步）\n\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath }//添加字段\n      })\n    } else {\n      next()\n    }\n  } else {\n    next() // 确保一定要调用 next()\n  }\n})\n// Bug:用户登录 跳转 指定页面后，刷新会重新跳转到Login页面\n//原因：时机不对，因为是同步响应，识别太早，每次识别isLogin为false都会重新跳转到登录页\n//解决方式：通过异步解决\n*/\n\nexport default router\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","//util通用信息\r\n\r\n//friendlyDate 优化日期 参数为：对象/字符串\r\nfunction friendlyDate(datsStr) { \r\n    let dateObj = typeof datsStr === 'object' ? datsStr : new Date(datsStr)\r\n    //datsStr 转换成 对象 \r\n  let time = dateObj.getTime() //发布时间\r\n  let now = Date.now()         //当前时间\r\n  let space = now - time       //时间差计算\r\n  let str = ''\r\n\r\n  switch (true) {\r\n    case space < 60000: //1分钟内\r\n      str = '刚刚'\r\n      break\r\n    case space < 1000*3600:  //1小时内\r\n      str = Math.floor(space/60000) + '分钟前'\r\n      break\r\n    case space < 1000*3600*24: //1天内\r\n      str = Math.floor(space/(1000*3600)) + '小时前'\r\n      break\r\n    default:                   //几个月内\r\n      str = Math.floor(space/(1000*3600*24)) + '天前'\r\n  }\r\n  return str\r\n}\r\n\r\n//1.直接引用路径调用函数\r\n//2.导出成插件\r\nexport default {\r\n    install(Vue,options) {\r\n        Vue.prototype.friendlyDate = friendlyDate //封装到Vue原型中，Vue实例都会有这个方法，直接调用方法\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/util.js","import Vue from 'vue';\nimport App from './App';\nimport router from './router'\n\n//引入组件Element（按钮/弹窗）\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css'\nVue.use(ElementUI);\n\n//引入封装request / 封装api\nimport request from '@/helpers/request'\nimport auth from '@/api/auth.js'\nimport blog from '@/api/blog.js'\n//测试\nwindow.request = request\nwindow.auth = auth\nwindow.blog = blog\n\n//引入store(Vuex)\nimport store from './store';\n\n//引用Util插件\nimport Util from '@/helpers/util';\nVue.use(Util)\n\nVue.config.productionTip = false\n\nnew Vue({\n  el: '#app',\n  router,\n  store,//导入store\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","//在封装request基础上，把获取数据的 API 进行封装，使其更易用\r\nimport request from '@/helpers/request'\r\n\r\n//后端约定接口 \r\nconst URL = {\r\n  GET_LIST: '/blog',\r\n  GET_DETAIL: '/blog/:blogId',\r\n  CREATE: '/blog',\r\n  UPDATE: '/blog/:blogId',\r\n  DELETE: '/blog/:blogId'\r\n}\r\n\r\n//导出\r\nexport default {\r\n  //获取博客列表\r\n  getBlogs({ page=1, userId, atIndex } = { page: 1 }) {\r\n    return request(URL.GET_LIST, 'GET', { page, userId, atIndex })\r\n  },\r\n  //精确：获取指定页数博客列表，只得到显示在首页的博客\r\n  getIndexBlogs({ page=1 } = { page: 1}) {\r\n    return this.getBlogs({ page, atIndex: true })\r\n  },\r\n  //精确：获取指定用户的博客\r\n  getBlogsByUserId(userId, { page=1, atIndex } = { page: 1}) {\r\n    return this.getBlogs({ userId, page, atIndex })\r\n  },\r\n  //获取id 为 blogId 的博客详情（:blogId替换用户传递的ID）\r\n  getDetail({ blogId }) {\r\n    return request(URL.GET_DETAIL.replace(':blogId', blogId))\r\n  },\r\n  //修改博客 id 为:blogId 的博客\r\n  updateBlog({ blogId }, { title, content, description, atIndex }) {\r\n    return request(URL.UPDATE.replace(':blogId', blogId), 'PATCH', { title, content, description, atIndex })\r\n  },\r\n  //删除博客 id 为:blogId 的博客\r\n  deleteBlog({ blogId }) {\r\n    return request(URL.DELETE.replace(':blogId', blogId), 'DELETE')\r\n  },\r\n  //创建博客\r\n  createBlog({ title = '', content = '', description = '', atIndex = false} = { title: '', content: '', description: '', atIndex: false}) {\r\n    return request(URL.CREATE, 'POST', { title, content, description, atIndex })\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/api/blog.js","//数据请求接口封装：发起请求=>获得数据=>渲染页面\r\n//原理：对 axios 底层请求做了进一步的定制和封装。\r\n//把 axios 请求封装成了输入参数更简洁明了、报错信息更「人性化」的 Promise 对象。\r\n//axios:第三方发起请求的工具\r\nimport axios from 'axios'\r\nimport { Message } from 'element-ui';//element组件\r\n\r\n//设置发起请求配置默认值（全局配置）\r\naxios.defaults.baseURL = 'http://blog-server.hunger-valley.com'//优点：设置好后，后面发送请求时无须再写完整URL，只需要写路径即可\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\r\n\r\n//request封装\r\nexport default function request(url, type = 'GET', data = {}) {\r\n    return new Promise((resolve, reject) => {//异步回调\r\n      \r\n        //发送GET/POST两种方式\r\n        let option = { \r\n            url,\r\n            method: type \r\n        }\r\n        \r\n        if (type.toLowerCase() === 'get') {//GET\r\n            \r\n            option.params = data //增加params属性并赋值\r\n            \r\n        } else { //POST\r\n            \r\n            option.data = data   //增加data属性并赋值\r\n        }\r\n        \r\n        //用户鉴权（登录/注册/刷新/跳转）\r\n        /*\r\n            方式一：cookie / session：\r\n            原理：\r\n            1.浏览器（用户名密码）发送到 服务器，服务器转换形成 session 数据，进行储存，并把 session 作为 cookie 返回为浏览器\r\n            2.浏览器拿到 cookie 保存到 localStorage,下次发送请求时，被动带上cookie 发送服务端\r\n            3.服务端识别 cookie，给出对应的权限\r\n\r\n            方式二：jwt鉴权机制（推荐！！）\r\n            原理：\r\n            1.浏览器（用户名密码）发送到 服务器，服务器自带加密，形成 token 密文，并把 token 返回为浏览器\r\n            2.浏览器拿到 token，首先保存到 localStorage \r\n            *3.浏览器再把token 保存到请求头 ['Authorization']，下次发送请求时，主动带上token 发送服务端\r\n            4.服务端自动查看请求头 ['Authorization'] 密文，给出对应的权限\r\n        */\r\n        //jwt鉴权机制：第二次\r\n        if (localStorage.token) {//如果localStorage中有token\r\n\r\n            axios.defaults.headers.common['Authorization']=localStorage.token//把token储存到请求头['Authorization']\r\n        }\r\n\r\n        //axios接受option对象（请求）.then执行代码\r\n        axios(option).then(res => { //res：服务器返回结果      \r\n            console.log(res.data)\r\n            \r\n            //后端接口约定\r\n            if (res.data.status === 'ok') { //数据状态通过\r\n                \r\n                if (res.data.token) {       //数据存在token：第一次\r\n                    localStorage.token = res.data.token //保存到localStorage本地\r\n                }\r\n                resolve(res.data) //发出成功数据\r\n\r\n            } else {  //数据状态不通过\r\n\r\n                Message.error(res.data.msg) //打印错误信息(Element组件)\r\n                reject(res.data)  //发出错误信息\r\n                \r\n            }\r\n\r\n        //没有发送数据直接出错\r\n        }).catch(err => { //捕捉错误（优点：后期调用可以再次对错误进行处理）\r\n            Message.error('网络异常')\r\n            reject({msg:'网络异常'})\r\n        })\r\n    })\r\n}\r\n\r\n//用法：\r\n/*\r\nrequest(url='路径', type='方法', data={ 参数 })\r\n  .then(data => {\r\n    执行动作\r\n}).catch(自己决定)\r\n\r\n后端约定接口：'/auth/login'\r\nrequest('/auth/login', 'POST', { username: 'xxx', password: 'xxx' })\r\n  .then(data => {\r\n    console.log(data)\r\n}).catch(自己决定)\r\n*/\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/request.js"],"sourceRoot":""}